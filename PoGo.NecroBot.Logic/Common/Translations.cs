#region using directives

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Cv3PKM.Bot.Logic.Logging;
using Cv3PKM.Bot.Logic.Utils;

#endregion

namespace Cv3PKM.Bot.Logic.Common
{
    public interface ITranslation
    {
        string GetTranslation(TranslationString translationString, params object[] data);

        string GetTranslation(TranslationString translationString);

        string GetPokemonTranslation(Cv3PKM.Protos.Enums.PokemonId id);

        string GetPokemonMovesetTranslation(Cv3PKM.Protos.Enums.PokemonMove move);
    }

    public enum TranslationString
    {
        Pokeball,
        GreatPokeball,
        UltraPokeball,
        MasterPokeball,
        LogLevelDebug,
        LogLevelPokestop,
        WrongAuthType,
        LoginInvalid,
        FarmPokestopsOutsideRadius,
        FarmPokestopsNoUsableFound,
        EventFortUsed,
        EventFortFailed,
        EventFortTargeted,
        EventProfileLogin,
        EventUsedLuckyEgg,
        EventPokemonEvolvedSuccess,
        EventPokemonEvolvedFailed,
        EventPokemonTransferred,
        EventItemRecycled,
        EventPokemonCaptureSuccess,
        EventPokemonCaptureFailed,
        EventNoPokeballs,
        WaitingForMorePokemonToEvolve,
        UseLuckyEggsMinPokemonAmountTooHigh,
        CatchMorePokemonToUseLuckyEgg,
        EventUseBerry,
        ItemRazzBerry,
        CatchStatusAttempt,
        CatchStatus,
        Candies,
        UnhandledGpxData,
        DisplayHighestsHeader,
        CommonWordPerfect,
        CommonWordName,
        DisplayHighestsCpHeader,
        DisplayHighestsPerfectHeader,
        WelcomeWarning,
        IncubatorPuttingEgg,
        IncubatorStatusUpdate,
        DisplayHighestsLevelHeader,
        LogEntryError,
        LogEntryAttention,
        LogEntryInfo,
        LogEntryPokestop,
        LogEntryFarming,
        LogEntrySniper,
        LogEntryRecycling,
        LogEntryPkmn,
        LogEntryTransfered,
        LogEntryEvolved,
        LogEntryBerry,
        LogEntryEgg,
        LogEntryDebug,
        LogEntryUpdate,
        LogEntryNew,
        LogEntrySoftBan,
        LoggingIn,
        PtcOffline,
        AccessTokenExpired,
        InvalidResponse,
        TryingAgainIn,
        AccountNotVerified,
        CommonWordUnknown,
        OpeningGoogleDevicePage,
        CouldntCopyToClipboard,
        CouldntCopyToClipboard2,
        RealisticTravelDetected,
        NotRealisticTravel,
        CoordinatesAreInvalid,
        GotUpToDateVersion,
        CheckForUpdatesDisabled,
        AutoUpdaterDisabled,
        DownloadingUpdate,
        FinishedDownloadingRelease,
        FinishedUnpackingFiles,
        FinishedTransferringConfig,
        UpdateFinished,
        LookingForIncensePokemon,
        PokemonSkipped,
        ZeroPokeballInv,
        CurrentPokeballInv,
        CurrentPotionInv,
        CurrentReviveInv,
        CurrentMiscItemInv,
        MaxItemsCombinedOverMaxItemStorage,
        RecyclingQuietly,
        InvFullTransferring,
        InvFullTransferManually,
        InvFullPokestopLooting,
        IncubatorEggHatched,
        EncounterProblem,
        EncounterProblemLurePokemon,
        LookingForPokemon,
        LookingForLurePokemon,
        DesiredDestTooFar,
        PokemonRename,
        PokemonFavorite,
        PokemonIgnoreFilter,
        CatchStatusError,
        CatchStatusEscape,
        CatchStatusFlee,
        CatchStatusMissed,
        CatchStatusSuccess,
        CatchTypeNormal,
        CatchTypeLure,
        CatchTypeIncense,
        WebSocketFailStart,
        StatsTemplateString,
        ProfileStatsTemplateString,
        ShowPokeTemplate,
        HelpTemplate,
        StatsXpTemplateString,
        RequireInputText,
        GoogleTwoFactorAuth,
        GoogleTwoFactorAuthExplanation,
        GoogleError,
        GoogleOffline,
        MissingCredentialsGoogle,
        MissingCredentialsPtc,
        SnipeScan,
        SnipeScanEx,
        NoPokemonToSnipe,
        NotEnoughPokeballsToSnipe,
        DisplayHighestMove1Header,
        DisplayHighestMove2Header,
        DisplayHighestCandy,
        IPBannedError,
        NoEggsAvailable,
        UseLuckyEggActive,
        UsedLuckyEgg,
        UseLuckyEggAmount,
        NoIncenseAvailable,
        UseIncenseActive,
        UseIncenseAmount,
        UsedIncense,
        AmountPkmSeenCaught,
        PkmPotentialEvolveCount,
        PkmNotEnoughRessources,
        EventUsedIncense,
        SnipeServerOffline,
        PromptError,
        SoftBanBypassed,
        FirstStartLanguagePrompt,
        FirstStartLanguageCodePrompt,
        FirstStartLanguageConfirm,
        FirstStartPrompt,
        FirstStartAutoGenSettings,
        FirstStartSetupAccount,
        FirstStartSetupTypePrompt,
        FirstStartSetupTypeConfirm,
        FirstStartSetupTypePromptError,
        FirstStartSetupUsernamePrompt,
        FirstStartSetupUsernameConfirm,
        FirstStartSetupPasswordPrompt,
        FirstStartSetupPasswordConfirm,
        FirstStartAccountCompleted,
        FirstStartDefaultLocationPrompt,
        FirstStartDefaultLocationSet,
        FirstStartDefaultLocation,
        FirstStartSetupDefaultLocationError,
        FirstStartSetupDefaultLatLongPrompt,
        FirstStartSetupDefaultLatLongConfirm,
        FirstStartSetupCompleted,
        PokedexCatchedTelegram,
        PokedexPokemonCatchedTelegram,
        PokedexNeededTelegram,
        PokedexPokemonNeededTelegram,
        LoggedInTelegram,
        LoginFailedTelegram,
        NotLoggedInTelegram,
        Unproxied,
        Proxied,
        FixProxySettings,
        UsageHelp,
        LoginRemainingTime,
        HighestsPokemoHeader,
        HighestsPokemoCell,
        HumanWalkingVariant,
        AccountBanned,
        CatchErrorKillSwitch,
        CatchEscapeKillSwitch,
        CatchFleeKillSwitch,
        CatchMissedKillSwitch,
        CatchSuccessKillSwitch,
        PokestopsKillSwitch,
        RequestHumanDistance,
        CalculatingNextPokestop,
        GoogleAPIFailed
    }

    public class Translation : ITranslation
    {
        [JsonProperty("TranslationStrings",
            ItemTypeNameHandling = TypeNameHandling.Arrays,
            ItemConverterType = typeof(KeyValuePairConverter),
            ObjectCreationHandling = ObjectCreationHandling.Replace,
            DefaultValueHandling = DefaultValueHandling.Populate)]
        //Default Translations (ENGLISH)        
        private readonly List<KeyValuePair<TranslationString, string>> _translationStrings = new List
            <KeyValuePair<TranslationString, string>>
        {
            new KeyValuePair<TranslationString, string>(TranslationString.Pokeball, "PokeBall"),
            new KeyValuePair<TranslationString, string>(TranslationString.GreatPokeball, "GreatBall"),
            new KeyValuePair<TranslationString, string>(TranslationString.UltraPokeball, "UltraBall"),
            new KeyValuePair<TranslationString, string>(TranslationString.MasterPokeball, "MasterBall"),
            new KeyValuePair<TranslationString, string>(TranslationString.WrongAuthType,
                "Unknown AuthType in config.json"),
            new KeyValuePair<TranslationString, string>(TranslationString.LoginInvalid, "User credentials are invalid and login failed."),
            new KeyValuePair<TranslationString, string>(TranslationString.FarmPokestopsOutsideRadius,
                "You're outside of your defined radius! Walking to start ({0}m away) in 5 seconds. Is your LastPos.ini file correct?"),
            new KeyValuePair<TranslationString, string>(TranslationString.FarmPokestopsNoUsableFound,
                "No usable PokeStops found in your area. Is your maximum distance too small?"),
            new KeyValuePair<TranslationString, string>(TranslationString.EventFortUsed,
                "Name: {0} XP: {1}, Gems: {2}, Items: {3}, Lat: {4}, Long: {5}"),
            new KeyValuePair<TranslationString, string>(TranslationString.EventFortFailed,
                "Name: {0} INFO: Looting failed, possible softban. Unban in: {1}/{2}"),
            new KeyValuePair<TranslationString, string>(TranslationString.EventFortTargeted,
                "Traveling to Pokestop: {0} ({1}m) ({2} seconds)"),
            new KeyValuePair<TranslationString, string>(TranslationString.EventProfileLogin, "Playing as {0}"),
            new KeyValuePair<TranslationString, string>(TranslationString.EventUsedIncense,
                "Used Incense, remaining: {0}"),
            new KeyValuePair<TranslationString, string>(TranslationString.EventUsedLuckyEgg,
                "Used Lucky Egg, remaining: {0}"),
            new KeyValuePair<TranslationString, string>(TranslationString.EventPokemonEvolvedSuccess,
                "{0} successfully for {1}xp"),
            new KeyValuePair<TranslationString, string>(TranslationString.EventPokemonEvolvedFailed,
                "Failed {0}. Result was {1}, stopping evolving {2}"),
            new KeyValuePair<TranslationString, string>(TranslationString.EventPokemonTransferred,
                "{0}\t- CP: {1}  IV: {2}%   [Best CP: {3}  IV: {4}%] (Candies: {5})"),
            new KeyValuePair<TranslationString, string>(TranslationString.EventItemRecycled, "{0}x {1}"),

            //Logging Cleanup (mostly uneccessary information, may want a verbose pokemon capture logger setting)
            new KeyValuePair<TranslationString, string>(TranslationString.EventPokemonCaptureSuccess,
                "({0}) | ({1}) {2} Lvl: {3} CP: ({4}/{5}) IV: {6}% | Chance: {7}% | {8}m dist | with a {9} ({10} left). | {11} EXP earned | {12} | lat: {13} long: {14}"),
            new KeyValuePair<TranslationString, string>(TranslationString.EventPokemonCaptureFailed,
                "({0}) | ({1}) {2} Lvl: {3} CP: ({4}/{5}) IV: {6}% | Chance: {7}% | {8}m dist | with a {9} ({10} left). | lat: {11} long: {12}"),


            new KeyValuePair<TranslationString, string>(TranslationString.EventNoPokeballs,
                "No Pokeballs - We missed a {0} with CP {1}"),
            new KeyValuePair<TranslationString, string>(TranslationString.WaitingForMorePokemonToEvolve,
                "Waiting to evolve {0} Pokemon once {1} more are caught! ({2}/{3} for {4}% inventory)"),
            new KeyValuePair<TranslationString, string>(TranslationString.UseLuckyEggsMinPokemonAmountTooHigh,
                "Lucky eggs will never be used with UseLuckyEggsMinPokemonAmount set to {0}, use <= {1} instead"),
            new KeyValuePair<TranslationString, string>(TranslationString.CatchMorePokemonToUseLuckyEgg,
                "Catch {0} more Pokemon to use a Lucky Egg!"),
            new KeyValuePair<TranslationString, string>(TranslationString.EventUseBerry, "Used {0} | {1} remaining"),
            new KeyValuePair<TranslationString, string>(TranslationString.ItemRazzBerry, "Razz Berry"),
            new KeyValuePair<TranslationString, string>(TranslationString.CatchStatusAttempt, "{0} Attempt #{1}"),
            new KeyValuePair<TranslationString, string>(TranslationString.CatchStatus, "{0}"),
            new KeyValuePair<TranslationString, string>(TranslationString.Candies, "Candies: {0}"),
            new KeyValuePair<TranslationString, string>(TranslationString.UnhandledGpxData,
                "Unhandled data in GPX file, attempting to skip."),
            new KeyValuePair<TranslationString, string>(TranslationString.DisplayHighestsHeader, "Pokemons"),
            new KeyValuePair<TranslationString, string>(TranslationString.CommonWordPerfect, "perfect"),
            new KeyValuePair<TranslationString, string>(TranslationString.CommonWordName, "name"),
            new KeyValuePair<TranslationString, string>(TranslationString.CommonWordUnknown, "Unknown"),
            new KeyValuePair<TranslationString, string>(TranslationString.DisplayHighestsCpHeader, "DisplayHighestsCP"),
            new KeyValuePair<TranslationString, string>(TranslationString.DisplayHighestsPerfectHeader,
                "DisplayHighestsPerfect"),
            new KeyValuePair<TranslationString, string>(TranslationString.DisplayHighestsLevelHeader,
                "DisplayHighestsLevel"),
            new KeyValuePair<TranslationString, string>(TranslationString.WelcomeWarning,
                "Make sure Lat & Lng are right. Exit Program if not! Lat: {0} Lng: {1}"),
            new KeyValuePair<TranslationString, string>(TranslationString.IncubatorPuttingEgg,
                "Putting egg in incubator: {0:0.00}km left"),
            new KeyValuePair<TranslationString, string>(TranslationString.IncubatorStatusUpdate,
                "Incubator status update: {0:0.00}km left"),
            new KeyValuePair<TranslationString, string>(TranslationString.IncubatorEggHatched,
                "Incubated egg has hatched: {0} | Lvl: {1} CP: ({2}/{3}) IV: {4}%"),
            new KeyValuePair<TranslationString, string>(TranslationString.LogEntryError, "ERROR"),
            new KeyValuePair<TranslationString, string>(TranslationString.LogEntryAttention, "ATTENTION"),
            new KeyValuePair<TranslationString, string>(TranslationString.LogEntryInfo, "INFO"),
            new KeyValuePair<TranslationString, string>(TranslationString.LogEntryPokestop, "POKESTOP"),
            new KeyValuePair<TranslationString, string>(TranslationString.LogEntryFarming, "FARMING"),
            new KeyValuePair<TranslationString, string>(TranslationString.LogEntrySniper, "SNIPER"),
            new KeyValuePair<TranslationString, string>(TranslationString.LogEntryRecycling, "RECYCLING"),
            new KeyValuePair<TranslationString, string>(TranslationString.LogEntryPkmn, "PKMN"),
            new KeyValuePair<TranslationString, string>(TranslationString.LogEntryTransfered, "TRANSFERRED"),
            new KeyValuePair<TranslationString, string>(TranslationString.LogEntryEvolved, "EVOLVED"),
            new KeyValuePair<TranslationString, string>(TranslationString.LogEntryBerry, "BERRY"),
            new KeyValuePair<TranslationString, string>(TranslationString.LogEntryEgg, "EGG"),
            new KeyValuePair<TranslationString, string>(TranslationString.LogEntryDebug, "DEBUG"),
            new KeyValuePair<TranslationString, string>(TranslationString.LogEntryUpdate, "UPDATE"),
            new KeyValuePair<TranslationString, string>(TranslationString.LogEntryNew, "NEW"),
            new KeyValuePair<TranslationString, string>(TranslationString.LogEntrySoftBan, "SOFTBAN"),
            new KeyValuePair<TranslationString, string>(TranslationString.LoggingIn, "Logging in using {0}"),
            new KeyValuePair<TranslationString, string>(TranslationString.PtcOffline,
                "PTC Servers are probably down OR your credentials are wrong. Try google"),
            new KeyValuePair<TranslationString, string>(TranslationString.AccessTokenExpired,
                "PTC Login Token expired. Relogging..."),
            new KeyValuePair<TranslationString, string>(TranslationString.InvalidResponse,
                "Received an invalid response from Niantic server"),
            new KeyValuePair<TranslationString, string>(TranslationString.TryingAgainIn,
                "Trying again in {0} seconds..."),
            new KeyValuePair<TranslationString, string>(TranslationString.AccountNotVerified,
                "Account not verified! Exiting..."),
            new KeyValuePair<TranslationString, string>(TranslationString.OpeningGoogleDevicePage,
                "Opening Google Device page. Please paste the code using CTRL+V"),
            new KeyValuePair<TranslationString, string>(TranslationString.CouldntCopyToClipboard,
                "Couldnt copy to clipboard, do it manually"),
            new KeyValuePair<TranslationString, string>(TranslationString.CouldntCopyToClipboard2,
                "Goto: {0} & enter {1}"),
            new KeyValuePair<TranslationString, string>(TranslationString.RealisticTravelDetected,
                "Detected realistic Traveling , using Default Settings inside config.json"),
            new KeyValuePair<TranslationString, string>(TranslationString.NotRealisticTravel,
                "Not realistic Traveling at {0}, using last saved LastPos.ini"),
            new KeyValuePair<TranslationString, string>(TranslationString.CoordinatesAreInvalid,
                "Coordinates in \"LastPos.ini\" file are invalid, using the default coordinates"),
            new KeyValuePair<TranslationString, string>(TranslationString.GotUpToDateVersion,
                "Perfect! You already have the newest Version {0}"),
            new KeyValuePair<TranslationString, string>(TranslationString.CheckForUpdatesDisabled,
                "Update checking is disabled. Current Version: {0}"),
            new KeyValuePair<TranslationString, string>(TranslationString.AutoUpdaterDisabled,
                "AutoUpdater is disabled. Get the latest release from: {0}\n "),
            new KeyValuePair<TranslationString, string>(TranslationString.DownloadingUpdate,
                "Downloading and apply Update..."),
            new KeyValuePair<TranslationString, string>(TranslationString.FinishedDownloadingRelease,
                "Finished downloading newest Release..."),
            new KeyValuePair<TranslationString, string>(TranslationString.FinishedUnpackingFiles,
                "Finished unpacking files..."),
            new KeyValuePair<TranslationString, string>(TranslationString.FinishedTransferringConfig,
                "Finished transferring your config to the new version..."),
            new KeyValuePair<TranslationString, string>(TranslationString.UpdateFinished,
                "Update finished, you can close this window now."),
            new KeyValuePair<TranslationString, string>(TranslationString.LookingForIncensePokemon,
                "Looking for incense Pokemon..."),
            new KeyValuePair<TranslationString, string>(TranslationString.LookingForPokemon, "Looking for Pokemon..."),
            new KeyValuePair<TranslationString, string>(TranslationString.LookingForLurePokemon,
                "Looking for lure Pokemon..."),
            new KeyValuePair<TranslationString, string>(TranslationString.PokemonSkipped, "Skipped {0}"),
            new KeyValuePair<TranslationString, string>(TranslationString.ZeroPokeballInv,
                "You have no pokeballs in your inventory, no more Pokemon can be caught!"),
            new KeyValuePair<TranslationString, string>(TranslationString.CurrentPokeballInv,
                "Pokeballs: {0} | Greatballs: {1} | Ultraballs: {2} | Masterballs: {3}"),
            new KeyValuePair<TranslationString, string>(TranslationString.CurrentPotionInv,
                "Potions: {0} | SuperPotions: {1} | HyperPotions: {2} | MaxPotions: {3}"),
            new KeyValuePair<TranslationString, string>(TranslationString.CurrentReviveInv,
                "Revives: {0} | MaxRevives: {1}"),
            new KeyValuePair<TranslationString, string>(TranslationString.CurrentMiscItemInv,
                "Berries: {0} | Incense: {1} | LuckyEggs: {2} | Lures: {3}"),
            new KeyValuePair<TranslationString, string>(TranslationString.MaxItemsCombinedOverMaxItemStorage,
                "[Configuration Invalid] Your maximum items combined (balls+potions+revives={0}) is over your max item storage ({1})"),
            new KeyValuePair<TranslationString, string>(TranslationString.RecyclingQuietly, "Recycling Quietly..."),
            new KeyValuePair<TranslationString, string>(TranslationString.InvFullTransferring,
                "Pokemon Inventory is full, transferring Pokemon..."),
            new KeyValuePair<TranslationString, string>(TranslationString.InvFullTransferManually,
                "Pokemon Inventory is full! Please transfer Pokemon manually or set TransferDuplicatePokemon to true in settings..."),
            new KeyValuePair<TranslationString, string>(TranslationString.InvFullPokestopLooting,
                "Inventory is full, no items looted!"),
            new KeyValuePair<TranslationString, string>(TranslationString.EncounterProblem, "Encounter problem: {0}"),
            new KeyValuePair<TranslationString, string>(TranslationString.EncounterProblemLurePokemon,
                "Encounter problem: Lure Pokemon {0}"),
            new KeyValuePair<TranslationString, string>(TranslationString.DesiredDestTooFar,
                "Your desired destination of {0}, {1} is too far from your current position of {2}, {3}"),
            new KeyValuePair<TranslationString, string>(TranslationString.PokemonRename,
                "Pokemon {0} ({1}) renamed from {2} to {3}."),
            new KeyValuePair<TranslationString, string>(TranslationString.PokemonFavorite,
                "{0}% perfect {1} (CP {2}) *favorited*."),
            new KeyValuePair<TranslationString, string>(TranslationString.PokemonIgnoreFilter,
                "[Pokemon ignore filter] - Ignoring {0} as defined in settings"),
            new KeyValuePair<TranslationString, string>(TranslationString.CatchStatusAttempt, "CatchAttempt"),
            new KeyValuePair<TranslationString, string>(TranslationString.CatchStatusError, "CatchError"),
            new KeyValuePair<TranslationString, string>(TranslationString.CatchStatusEscape, "CatchEscape"),
            new KeyValuePair<TranslationString, string>(TranslationString.CatchStatusFlee, "CatchFlee"),
            new KeyValuePair<TranslationString, string>(TranslationString.CatchStatusMissed, "CatchMissed"),
            new KeyValuePair<TranslationString, string>(TranslationString.CatchStatusSuccess, "CatchSuccess"),
            new KeyValuePair<TranslationString, string>(TranslationString.CatchTypeNormal, "Normal"),
            new KeyValuePair<TranslationString, string>(TranslationString.CatchTypeLure, "Lure"),
            new KeyValuePair<TranslationString, string>(TranslationString.CatchTypeIncense, "Incense"),
            new KeyValuePair<TranslationString, string>(TranslationString.WebSocketFailStart,
                "Failed to start WebSocketServer on port : {0}"),
            new KeyValuePair<TranslationString, string>(TranslationString.StatsTemplateString,
                "{0} - Runtime {1} - Lvl: {2} | EXP/H: {3:n0} | P/H: {4:n0} | Stardust: {5:n0} | Transferred: {6:n0} | Recycled: {7:n0}"),
            new KeyValuePair<TranslationString, string>(TranslationString.ProfileStatsTemplateString,
                "----- LVL {0} | {1} ----- \n Experience: {2}/{3} \n Pokemons caught: {4} \n Pokemons deployed: {5} \n Pokestops visited: {6} \n Eggs hatched: {7} \n Pokemons evolved: {8} \n Pokedex entries: {9} \n KM walked: {10}  \n Pokemons: {11}/{12}"),
            new KeyValuePair<TranslationString, string>(TranslationString.ShowPokeTemplate,
                "\n CP: {0} | IV: {1}% | Name: {2}"),
            new KeyValuePair<TranslationString, string>(TranslationString.HelpTemplate,
                "Commands: \n \n /top <cp/iv> <amount> - Shows you top Pokemons. \n /all <cp/iv> - Shows you all Pokemons. \n /profile - Shows you profile. \n /loc - Shows you location. \n /items - Shows your items. \n /status - Shows you the Status of the Bot. \n /pokedex - Shows you Pokedex "),
            new KeyValuePair<TranslationString, string>(TranslationString.StatsXpTemplateString,
                "{0} (Advance in {1}h {2}m | {3:n0}/{4:n0} XP)"),
            new KeyValuePair<TranslationString, string>(TranslationString.RequireInputText,
                "Program will continue after the key press..."),
            new KeyValuePair<TranslationString, string>(TranslationString.GoogleTwoFactorAuth,
                "As you have Google Two Factor Auth enabled, you will need to insert an App Specific Password into the auth.json"),
            new KeyValuePair<TranslationString, string>(TranslationString.GoogleTwoFactorAuthExplanation,
                "Opening Google App-Passwords. Please make a new App Password (use Other as Device)"),
            new KeyValuePair<TranslationString, string>(TranslationString.GoogleError,
                "Make sure you have entered the right Email & Password."),
            new KeyValuePair<TranslationString, string>(TranslationString.GoogleOffline,
                "Google servers are probably down, Please be patient and start the bot later."),
            new KeyValuePair<TranslationString, string>(TranslationString.MissingCredentialsGoogle,
                "You need to fill out GoogleUsername and GooglePassword in auth.json!"),
            new KeyValuePair<TranslationString, string>(TranslationString.MissingCredentialsPtc,
                "You need to fill out PtcUsername and PtcPassword in auth.json!"),
            new KeyValuePair<TranslationString, string>(TranslationString.SnipeScan,
                "Scanning for Snipeable Pokemon at {0}..."),
            new KeyValuePair<TranslationString, string>(TranslationString.SnipeScanEx,
                "Sniping a {0} with {1} IV at {2}..."),
            new KeyValuePair<TranslationString, string>(TranslationString.NoPokemonToSnipe,
                "Did not find a Pokemon within the Location, pokemon despawned?"),
            new KeyValuePair<TranslationString, string>(TranslationString.NotEnoughPokeballsToSnipe,
                "Not enough Pokeballs to start sniping! ({0}/{1})"),
            new KeyValuePair<TranslationString, string>(TranslationString.DisplayHighestMove1Header, "MOVE1"),
            new KeyValuePair<TranslationString, string>(TranslationString.DisplayHighestMove2Header, "MOVE2"),
            new KeyValuePair<TranslationString, string>(TranslationString.DisplayHighestCandy, "Candy"),
            new KeyValuePair<TranslationString, string>(TranslationString.IPBannedError,
                "Connection refused. Your IP might have been Blacklisted by Niantic. Exiting.."),
            new KeyValuePair<TranslationString, string>(TranslationString.NoEggsAvailable, "No Eggs Available"),
            new KeyValuePair<TranslationString, string>(TranslationString.UseLuckyEggActive, "Lucky Egg Already Active"),
            new KeyValuePair<TranslationString, string>(TranslationString.UsedLuckyEgg, "Used Lucky Egg"),
            new KeyValuePair<TranslationString, string>(TranslationString.UseLuckyEggAmount, "Lucky Eggs in Inventory: {0}"),
            new KeyValuePair<TranslationString, string>(TranslationString.NoIncenseAvailable, "No Incense Available"),
            new KeyValuePair<TranslationString, string>(TranslationString.UseIncenseActive, "Incense Already Active"),
            new KeyValuePair<TranslationString, string>(TranslationString.UseIncenseAmount, "Incense in Inventory: {0}"),
            new KeyValuePair<TranslationString, string>(TranslationString.UsedIncense, "Used an Incense"),
            new KeyValuePair<TranslationString, string>(TranslationString.AmountPkmSeenCaught,
                "Amount of Pokemon Seen: {0}/151, Amount of Pokemon Caught: {1}/151"),
            new KeyValuePair<TranslationString, string>(TranslationString.PkmPotentialEvolveCount,
                "Potential Evolutions: {0}"),
            new KeyValuePair<TranslationString, string>(TranslationString.PkmNotEnoughRessources,
                "Pokemon Upgrade Failed Not Enough Resources"),
            new KeyValuePair<TranslationString, string>(TranslationString.SnipeServerOffline, "Sniping server is offline. Skipping..."),
            new KeyValuePair<TranslationString, string>(TranslationString.FirstStartPrompt, "This is your first start, would you like to begin setup? {0}/{1}"),
            new KeyValuePair<TranslationString, string>(TranslationString.FirstStartLanguagePrompt, "Would you like to change the default language? {0}/{1}"),
            new KeyValuePair<TranslationString, string>(TranslationString.FirstStartLanguageCodePrompt, "Please enter a new language code"),
            new KeyValuePair<TranslationString, string>(TranslationString.FirstStartLanguageConfirm, "Language Code Applied: {0}"),
            new KeyValuePair<TranslationString, string>(TranslationString.PromptError, "[INPUT ERROR] Error with input, please enter '{0}' or '{1}"),
            new KeyValuePair<TranslationString, string>(TranslationString.FirstStartAutoGenSettings, "Config/Auth file automatically generated and must be completed before continuing"),
            new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupAccount, "### Setting up new USER ACCOUNT ###"),
            new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupTypePrompt, "Please choose an account type: {0}/{1}"),
            new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupTypeConfirm, "Chosen Account Type: {0}"),
            new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupTypePromptError, "[ERROR] submitted an incorrect account type, please choose '{0}' or '{1}'"),
            new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupUsernamePrompt, "Please enter a Username"),
            new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupUsernameConfirm, "Accepted username: {0}"),
            new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupPasswordPrompt, "Please enter a Password"),
            new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupPasswordConfirm, "Accepted password: {0}"),
            new KeyValuePair<TranslationString, string>(TranslationString.FirstStartAccountCompleted, "### User Account Completed ###"),
            new KeyValuePair<TranslationString, string>(TranslationString.FirstStartDefaultLocationPrompt, "Would you like to setup a new Default Location? {0}/{1}"),
            new KeyValuePair<TranslationString, string>(TranslationString.FirstStartDefaultLocationSet, "Default Location Applied"),
            new KeyValuePair<TranslationString, string>(TranslationString.FirstStartDefaultLocation, "### Setting Default Position ###"),
            new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupDefaultLocationError, "[ERROR] Please input a correct LatLong for example: {0}"),
            new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupDefaultLatLongPrompt, "Please enter a Latitude and Longitude (Right click to paste) - Format: Value, Value"),
            new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupDefaultLatLongConfirm, "Lattitude and Longitude accepted: {0}"),
            new KeyValuePair<TranslationString, string>(TranslationString.SoftBanBypassed,
                "Successfully bypassed!"),
            new KeyValuePair<TranslationString, string>(TranslationString.FirstStartSetupCompleted, "### COMPLETED CONFIG SETUP ###"),
            new KeyValuePair<TranslationString, string>(TranslationString.PokedexCatchedTelegram, "--- Pokedex catched --- \n"),
            new KeyValuePair<TranslationString, string>(TranslationString.PokedexPokemonCatchedTelegram, "#{0} Name: {1} | Catched: {2} | Encountered: {3} \n"),
            new KeyValuePair<TranslationString, string>(TranslationString.PokedexNeededTelegram, "--- Pokedex needed --- \n"),
            new KeyValuePair<TranslationString, string>(TranslationString.PokedexPokemonNeededTelegram, "#{0}# Name: {1} \n"),
            new KeyValuePair<TranslationString, string>(TranslationString.LoggedInTelegram, "You have been logged in sucessfully. Session is valid for 5 Minutes"),
            new KeyValuePair<TranslationString, string>(TranslationString.LoginFailedTelegram, "Wrong Password or wrong Syntax! Use /login PASSWORD"),
            new KeyValuePair<TranslationString, string>(TranslationString.NotLoggedInTelegram, "You are not logged in, use /login PASSWORD"),
            new KeyValuePair<TranslationString, string>(TranslationString.Proxied, "Your IP is: {0} | Proxy IP is: {1}"),
            new KeyValuePair<TranslationString, string>(TranslationString.Unproxied, "Your IP is: {0}"),
            new KeyValuePair<TranslationString, string>(TranslationString.FixProxySettings, "Press any key to exit so you can fix your proxy settings..."),
            new KeyValuePair<TranslationString, string>(TranslationString.UsageHelp, "Invalid command arguments! \n Correct usage: \n {0}"),
            new KeyValuePair<TranslationString, string>(TranslationString.LoginRemainingTime, "You are already logged in! \n Session valid for: ({0}:{1} seconds)"),
            new KeyValuePair<TranslationString, string>(TranslationString.HighestsPokemoHeader, "====== {0} ======"),
            new KeyValuePair<TranslationString, string>(TranslationString.HighestsPokemoCell, "# CP {0}/{1} | ({2}% {3})\t| Lvl {4}\t {5}: {6}\t {7}: {8} {9}: {10} {11}: {12}"),
            new KeyValuePair<TranslationString, string>(TranslationString.HumanWalkingVariant, "Walking Speed: Has been changed, {0:n2} Km/h to {1:n2} Km/h"),
            new KeyValuePair<TranslationString, string>(TranslationString.AccountBanned, "Probably Permanent Ban!"),
            new KeyValuePair<TranslationString, string>(TranslationString.CatchErrorKillSwitch, "KillSwitch: Catch error {0}/{1}"),
            new KeyValuePair<TranslationString, string>(TranslationString.CatchEscapeKillSwitch, "KillSwitch: Catch escape {0}/{1}"),
            new KeyValuePair<TranslationString, string>(TranslationString.CatchFleeKillSwitch, "KillSwitch: Catch flee {0}/{1}"),
            new KeyValuePair<TranslationString, string>(TranslationString.CatchMissedKillSwitch, "KillSwitch: Catch missed {0}/{1}"),
            new KeyValuePair<TranslationString, string>(TranslationString.CatchSuccessKillSwitch, "KillSwitch: Catch success {0}/{1}"),
            new KeyValuePair<TranslationString, string>(TranslationString.PokestopsKillSwitch, "KillSwitch: Pokestops {0}/{1}"),
            new KeyValuePair<TranslationString, string>(TranslationString.RequestHumanDistance, "Request human distance of pokestops..."),
            new KeyValuePair<TranslationString, string>(TranslationString.CalculatingNextPokestop, "Calculating next pokestop..."),
            new KeyValuePair<TranslationString, string>(TranslationString.GoogleAPIFailed, "You need to configure \"GoogleAPIKey\", get API Key in link: https://developers.google.com/maps/documentation/directions/get-api-key")
        };

        [JsonProperty("PokemonStrings",
            ItemTypeNameHandling = TypeNameHandling.Arrays,
            ItemConverterType = typeof(KeyValuePairConverter),
            ObjectCreationHandling = ObjectCreationHandling.Replace,
            DefaultValueHandling = DefaultValueHandling.Populate)]
        private readonly List<KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>> _pokemonTranslationStrings = new List<KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>>()
        {
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)001,"Bulbasaur"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)002,"Ivysaur"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)003,"Venusaur"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)004,"Charmander"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)005,"Charmeleon"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)006,"Charizard"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)007,"Squirtle"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)008,"Wartortle"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)009,"Blastoise"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)010,"Caterpie"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)011,"Metapod"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)012,"Butterfree"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)013,"Weedle"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)014,"Kakuna"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)015,"Beedrill"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)016,"Pidgey"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)017,"Pidgeotto"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)018,"Pidgeot"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)019,"Rattata"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)020,"Raticate"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)021,"Spearow"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)022,"Fearow"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)023,"Ekans"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)024,"Arbok"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)025,"Pikachu"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)026,"Raichu"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)027,"Sandshrew"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)028,"Sandslash"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)029,"NidoranFemale"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)030,"Nidorina"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)031,"Nidoqueen"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)032,"NidoranMale"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)033,"Nidorino"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)034,"Nidoking"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)035,"Clefairy"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)036,"Clefable"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)037,"Vulpix"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)038,"Ninetales"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)039,"Jigglypuff"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)040,"Wigglytuff"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)041,"Zubat"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)042,"Golbat"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)043,"Oddish"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)044,"Gloom"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)045,"Vileplume"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)046,"Paras"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)047,"Parasect"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)048,"Venonat"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)049,"Venomoth"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)050,"Diglett"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)051,"Dugtrio"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)052,"Meowth"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)053,"Persian"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)054,"Psyduck"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)055,"Golduck"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)056,"Mankey"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)057,"Primeape"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)058,"Growlithe"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)059,"Arcanine"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)060,"Poliwag"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)061,"Poliwhirl"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)062,"Poliwrath"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)063,"Abra"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)064,"Kadabra"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)065,"Alakazam"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)066,"Machop"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)067,"Machoke"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)068,"Machamp"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)069,"Bellsprout"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)070,"Weepinbell"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)071,"Victreebel"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)072,"Tentacool"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)073,"Tentacruel"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)074,"Geodude"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)075,"Graveler"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)076,"Golem"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)077,"Ponyta"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)078,"Rapidash"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)079,"Slowpoke"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)080,"Slowbro"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)081,"Magnemite"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)082,"Magneton"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)083,"Farfetchd"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)084,"Doduo"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)085,"Dodrio"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)086,"Seel"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)087,"Dewgong"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)088,"Grimer"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)089,"Muk"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)090,"Shellder"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)091,"Cloyster"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)092,"Gastly"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)093,"Haunter"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)094,"Gengar"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)095,"Onix"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)096,"Drowzee"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)097,"Hypno"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)098,"Krabby"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)099,"Kingler"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)100,"Voltorb"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)101,"Electrode"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)102,"Exeggcute"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)103,"Exeggutor"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)104,"Cubone"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)105,"Marowak"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)106,"Hitmonlee"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)107,"Hitmonchan"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)108,"Lickitung"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)109,"Koffing"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)110,"Weezing"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)111,"Rhyhorn"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)112,"Rhydon"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)113,"Chansey"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)114,"Tangela"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)115,"Kangaskhan"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)116,"Horsea"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)117,"Seadra"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)118,"Goldeen"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)119,"Seaking"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)120,"Staryu"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)121,"Starmie"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)122,"Mr. Mime"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)123,"Scyther"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)124,"Jynx"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)125,"Electabuzz"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)126,"Magmar"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)127,"Pinsir"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)128,"Tauros"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)129,"Magikarp"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)130,"Gyarados"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)131,"Lapras"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)132,"Ditto"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)133,"Eevee"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)134,"Vaporeon"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)135,"Jolteon"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)136,"Flareon"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)137,"Porygon"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)138,"Omanyte"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)139,"Omastar"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)140,"Kabuto"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)141,"Kabutops"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)142,"Aerodactyl"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)143,"Snorlax"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)144,"Articuno"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)145,"Zapdos"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)146,"Moltres"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)147,"Dratini"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)148,"Dragonair"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)149,"Dragonite"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)150,"Mewtwo"),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonId, string>((Cv3PKM.Protos.Enums.PokemonId)151,"Mew"),
        };

        [JsonProperty("PokemonMovesetStrings",
        ItemTypeNameHandling = TypeNameHandling.Arrays,
        ItemConverterType = typeof(KeyValuePairConverter),
        ObjectCreationHandling = ObjectCreationHandling.Replace,
        DefaultValueHandling = DefaultValueHandling.Populate)]
        private readonly List<KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string>> _pokemonMovesetTranslationStrings =
            new List<KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string>>()
        {
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.MoveUnset, "MoveUnset" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.ThunderShock, "ThunderShock" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.QuickAttack, "QuickAttack" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Scratch, "Scratch" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Ember, "Ember" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.VineWhip, "VineWhip" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Tackle, "Tackle" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.RazorLeaf, "RazorLeaf" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.TakeDown, "TakeDown" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.WaterGun, "WaterGun" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Bite, "Bite" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Pound, "Pound" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.DoubleSlap, "DoubleSlap" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Wrap, "Wrap" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.HyperBeam, "HyperBeam" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Lick, "Lick" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.DarkPulse, "DarkPulse" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Smog, "Smog" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Sludge, "Sludge" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.MetalClaw, "MetalClaw" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.ViceGrip, "ViceGrip" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.FlameWheel, "FlameWheel" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Megahorn, "Megahorn" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.WingAttack, "WingAttack" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Flamethrower, "Flamethrower" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.SuckerPunch, "SuckerPunch" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Dig, "Dig" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.LowKick, "LowKick" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.CrossChop, "CrossChop" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.PsychoCut, "PsychoCut" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Psybeam, "Psybeam" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Earthquake, "Earthquake" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.StoneEdge, "StoneEdge" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.IcePunch, "IcePunch" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.HeartStamp, "HeartStamp" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Discharge, "Discharge" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.FlashCannon, "FlashCannon" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Peck, "Peck" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.DrillPeck, "DrillPeck" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.IceBeam, "IceBeam" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Blizzard, "Blizzard" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.AirSlash, "AirSlash" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.HeatWave, "HeatWave" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Twineedle, "Twineedle" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.PoisonJab, "PoisonJab" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.AerialAce, "AerialAce" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.DrillRun, "DrillRun" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.PetalBlizzard, "PetalBlizzard" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.MegaDrain, "MegaDrain" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.BugBuzz, "BugBuzz" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.PoisonFang, "PoisonFang" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.NightSlash, "NightSlash" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Slash, "Slash" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.BubbleBeam, "BubbleBeam" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Submission, "Submission" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.KarateChop, "KarateChop" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.LowSweep, "LowSweep" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.AquaJet, "AquaJet" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.AquaTail, "AquaTail" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.SeedBomb, "SeedBomb" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Psyshock, "Psyshock" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.RockThrow, "RockThrow" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.AncientPower, "AncientPower" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.RockTomb, "RockTomb" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.RockSlide, "RockSlide" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.PowerGem, "PowerGem" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.ShadowSneak, "ShadowSneak" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.ShadowPunch, "ShadowPunch" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.ShadowClaw, "ShadowClaw" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.OminousWind, "OminousWind" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.ShadowBall, "ShadowBall" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.BulletPunch, "BulletPunch" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.MagnetBomb, "MagnetBomb" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.SteelWing, "SteelWing" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.IronHead, "IronHead" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.ParabolicCharge, "ParabolicCharge" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Spark, "Spark" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.ThunderPunch, "ThunderPunch" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Thunder, "Thunder" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Thunderbolt, "Thunderbolt" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Twister, "Twister" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.DragonBreath, "DragonBreath" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.DragonPulse, "DragonPulse" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.DragonClaw, "DragonClaw" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.DisarmingVoice, "DisarmingVoice" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.DrainingKiss, "DrainingKiss" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.DazzlingGleam, "DazzlingGleam" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Moonblast, "Moonblast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.PlayRough, "PlayRough" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.CrossPoison, "CrossPoison" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.SludgeBomb, "SludgeBomb" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.SludgeWave, "SludgeWave" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.GunkShot, "GunkShot" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.MudShot, "MudShot" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.BoneClub, "BoneClub" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Bulldoze, "Bulldoze" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.MudBomb, "MudBomb" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.FuryCutter, "FuryCutter" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.BugBite, "BugBite" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.SignalBeam, "SignalBeam" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.XScissor, "XScissor" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.FlameCharge, "FlameCharge" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.FlameBurst, "FlameBurst" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.FireBlast, "FireBlast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Brine, "Brine" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.WaterPulse, "WaterPulse" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Scald, "Scald" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.HydroPump, "HydroPump" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Psychic, "Psychic" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Psystrike, "Psystrike" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.IceShard, "IceShard" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.IcyWind, "IcyWind" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.FrostBreath, "FrostBreath" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Absorb, "Absorb" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.GigaDrain, "GigaDrain" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.FirePunch, "FirePunch" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.SolarBeam, "SolarBeam" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.LeafBlade, "LeafBlade" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.PowerWhip, "PowerWhip" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Splash, "Splash" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Acid, "Acid" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.AirCutter, "AirCutter" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Hurricane, "Hurricane" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.BrickBreak, "BrickBreak" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Cut, "Cut" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Swift, "Swift" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.HornAttack, "HornAttack" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Stomp, "Stomp" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Headbutt, "Headbutt" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.HyperFang, "HyperFang" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Slam, "Slam" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.BodySlam, "BodySlam" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Rest, "Rest" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.Struggle, "Struggle" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.ScaldBlastoise, "ScaldBlastoise" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.HydroPumpBlastoise, "HydroPumpBlastoise" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.WrapGreen, "WrapGreen" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.WrapPink, "WrapPink" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.FuryCutterFast, "FuryCutterFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.BugBiteFast, "BugBiteFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.BiteFast, "BiteFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.SuckerPunchFast, "SuckerPunchFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.DragonBreathFast, "DragonBreathFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.ThunderShockFast, "ThunderShockFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.SparkFast, "SparkFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.LowKickFast, "LowKickFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.KarateChopFast, "KarateChopFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.EmberFast, "EmberFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.WingAttackFast, "WingAttackFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.PeckFast, "PeckFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.LickFast, "LickFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.ShadowClawFast, "ShadowClawFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.VineWhipFast, "VineWhipFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.RazorLeafFast, "RazorLeafFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.MudShotFast, "MudShotFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.IceShardFast, "IceShardFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.FrostBreathFast, "FrostBreathFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.QuickAttackFast, "QuickAttackFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.ScratchFast, "ScratchFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.TackleFast, "TackleFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.PoundFast, "PoundFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.CutFast, "CutFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.PoisonJabFast, "PoisonJabFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.AcidFast, "AcidFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.PsychoCutFast, "PsychoCutFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.RockThrowFast, "RockThrowFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.MetalClawFast, "MetalClawFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.BulletPunchFast, "BulletPunchFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.WaterGunFast, "WaterGunFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.SplashFast, "SplashFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.WaterGunFastBlastoise, "WaterGunFastBlastoise" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.MudSlapFast, "MudSlapFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.ZenHeadbuttFast, "ZenHeadbuttFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.ConfusionFast, "ConfusionFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.PoisonStingFast, "PoisonStingFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.BubbleFast, "BubbleFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.FeintAttackFast, "FeintAttackFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.SteelWingFast, "SteelWingFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.FireFangFast, "FireFangFast" ),
            new KeyValuePair<Cv3PKM.Protos.Enums.PokemonMove, string> ( Cv3PKM.Protos.Enums.PokemonMove.RockSmashFast, "RockSmashFast" )
        };

        public string GetTranslation(TranslationString translationString, params object[] data)
        {
            var translation = _translationStrings.FirstOrDefault(t => t.Key.Equals(translationString)).Value;
            return translation != default(string)
                ? string.Format(translation, data)
                : $"Translation for {translationString} is missing";
        }

        public string GetTranslation(TranslationString translationString)
        {
            var translation = _translationStrings.FirstOrDefault(t => t.Key.Equals(translationString)).Value;
            return translation != default(string) ? translation : $"Translation for {translationString} is missing";
        }

        public string GetPokemonTranslation(Cv3PKM.Protos.Enums.PokemonId id)
        {
            var translation = _pokemonTranslationStrings.FirstOrDefault(t => t.Key.Equals(id)).Value;
            return translation != default(string) ? translation : $"Translation for pokemon {id} is missing";
        }

        public string GetPokemonMovesetTranslation(Cv3PKM.Protos.Enums.PokemonMove move)
        {
            var translation = _pokemonMovesetTranslationStrings.FirstOrDefault(t => t.Key.Equals(move)).Value;
            return translation != default(string) ? translation : $"Translation for move {move} is missing";
        }

        public static Translation Load(ILogicSettings logicSettings)
        {
            return Load(logicSettings, new Translation());
        }

        public static Translation Load(ILogicSettings logicSettings, Translation translations)
        {
            var translationsLanguageCode = logicSettings.TranslationLanguageCode;
            var translationPath = Path.Combine(logicSettings.GeneralConfigPath, "translations");
            var fullPath = Path.Combine(translationPath, "translation." + translationsLanguageCode + ".json");

            if (File.Exists(fullPath))
            {
                var input = File.ReadAllText(fullPath);

                var jsonSettings = new JsonSerializerSettings();
                jsonSettings.Converters.Add(new StringEnumConverter { CamelCaseText = true });
                jsonSettings.ObjectCreationHandling = ObjectCreationHandling.Replace;
                jsonSettings.DefaultValueHandling = DefaultValueHandling.Populate;

                try
                {
                    translations = JsonConvert.DeserializeObject<Translation>(input, jsonSettings);
                    //TODO make json to fill default values as it won't do it now
                    new Translation()._translationStrings.Where(
                        item => translations._translationStrings.All(a => a.Key != item.Key))
                        .ToList()
                        .ForEach(translations._translationStrings.Add);
                    new Translation()._pokemonTranslationStrings.Where(
                        item => translations._pokemonTranslationStrings.All(a => a.Key != item.Key))
                        .ToList()
                        .ForEach(translations._pokemonTranslationStrings.Add);
                }
                catch (JsonException ex)
                {
                    Logger.Write($"[ERROR] Issue loading translations: {ex.ToString()}", LogLevel.Warning);
                    Logger.Write("[Request] Rebuild the translations folder? Y/N");

                    string strInput = Console.ReadLine().ToLower();

                    if (strInput.Equals("y"))
                    {
                        // Currently this section can only rebuild the EN translations file \\
                        // This is because default values cannot be supplied from other languages \\
                        Logger.Write("Loading fresh translations and continuing");
                        translations = new Translation();
                        translations.Save(Path.Combine(translationPath, "translation.en.json"));
                    }
                    else
                    {
                        ErrorHandler.ThrowFatalError("[ERROR] Fatal Error", 3, LogLevel.Error);
                        return null;
                    }
                }
            }
            else
            {
                translations = new Translation();
                translations.Save(Path.Combine(translationPath, "translation.en.json"));
            }

            return translations;
        }

        public void Save(string fullPath)
        {
            var output = JsonConvert.SerializeObject(this, Formatting.Indented,
                new StringEnumConverter { CamelCaseText = true });

            var folder = Path.GetDirectoryName(fullPath);
            if (folder != null && !Directory.Exists(folder))
            {
                Directory.CreateDirectory(folder);
            }

            File.WriteAllText(fullPath, output);
        }
    }
}
